[1;33mdiff --git a/lib/mix/lib/mix/tasks/deps.loadpaths.ex b/lib/mix/lib/mix/tasks/deps.loadpaths.ex[m
[1;33mindex 671db2a..8ef1361 100644[m
[1;33m--- a/lib/mix/lib/mix/tasks/deps.loadpaths.ex[m
[1;33m+++ b/lib/mix/lib/mix/tasks/deps.loadpaths.ex[m
[1;35m@@ -33,7 +33,9 @@[m [mdefmodule Mix.Tasks.Deps.Loadpaths do[m
         path[m
       end[m
 [m
[1;31m-    prune_deps(load_paths, "--no-deps-check" in args or System.get_env("MIX_NO_DEPS") in ~w(1 true))[m
[1;32m+[m[1;32m    unless "--no-deps-check" in args or System.get_env("MIX_NO_DEPS") in ~w(1 true) do[m
[1;32m+[m[1;32m      prune_deps(load_paths)[m
[1;32m+[m[1;32m    end[m
   end[m
 [m
   # If the build is per environment, we should be able to look[m
[1;35m@@ -46,11 +48,10 @@[m [mdefmodule Mix.Tasks.Deps.Loadpaths do[m
   # We also expect env_path to be nil. If it is not nil, it means[m
   # it was set by a parent application and the parent application[m
   # should be the one doing the pruning.[m
[1;31m-  defp prune_deps(load_paths, no_check?) do[m
[1;32m+[m[1;32m  defp prune_deps(load_paths) do[m
     config = Mix.Project.config[m
 [m
[1;31m-    shared_build? =[m
[1;31m-      no_check? or config[:build_path] != nil or config[:build_per_environment] == false[m
[1;32m+[m[1;32m    shared_build? = config[:build_path] != nil or config[:build_per_environment] == false[m
 [m
     config[m
     |> Mix.Project.build_path[m
